{"version":3,"file":"static/js/770.477cacab.chunk.js","mappings":"sOAEaA,E,OAAWC,GAAAA,GAAH,4E,SCqCrB,MAlCA,WACE,OAAgCC,EAAAA,EAAAA,UAAS,MAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAQR,OANAE,EAAAA,EAAAA,YAAU,WACS,OAAbJ,IACFK,EAAAA,EAAAA,IAAaH,GAAII,MAAK,SAAAC,GAAI,OAAIN,EAAYM,EAAKA,KAAKC,KAA1B,GAE7B,GAAE,CAACR,EAAUE,KAGZ,SAACL,EAAD,UACGG,GACCA,EAASS,KAAI,SAAAC,GACX,OACE,2BACE,gBACEC,IACED,EAAME,aAAN,8CAC2CF,EAAME,cAC7C,sCAENC,IAAKH,EAAMI,KACXC,MAAO,IACPC,OAAQ,OAEV,uBAAIN,EAAMI,SAXHJ,EAAMR,GAclB,KAGR,C,+LChCKe,EAAW,+BAEXC,EAAU,4CAET,SAAeC,IAAtB,+B,aAAO,O,oBAAA,oGACkBC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,8BAA2CC,IAD7D,UAGmB,OAFlBG,EADD,QAGQC,OAHR,yCAIID,EAASd,KAAKgB,SAJlB,kEAUA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAA4BC,GAA5B,uFACeL,EAAAA,EAAAA,IAAA,UACfH,EADe,kBACGQ,GADH,OACaP,EADb,oBADf,UAIgB,OAHfQ,EADD,QAIKJ,OAJL,yCAKII,GALJ,kEAWA,SAAerB,EAAtB,kC,aAAO,O,oBAAA,WAA4BoB,GAA5B,uFACcL,EAAAA,EAAAA,IAAA,UACdH,EADc,kBACIQ,EADJ,mBACsBP,EADtB,oBADd,UAIe,OAHdV,EADD,QAIIc,OAJJ,yCAKId,GALJ,kEAWA,SAAemB,EAAtB,kC,aAAO,O,oBAAA,WAA8BF,GAA9B,uFACgBL,EAAAA,EAAAA,IAAA,UAChBH,EADgB,kBACEQ,EADF,mBACoBP,EADpB,oBADhB,UAIiB,OAHhBU,EADD,QAIMN,OAJN,yCAKIM,GALJ,kEAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACgBV,EAAAA,EAAAA,IAAA,UAChBH,EADgB,wBACQC,EADR,kBACyBY,IAFzC,UAIiB,OAHhBC,EADD,QAIMT,OAJN,yCAKIS,GALJ,kE","sources":["components/Cast.styled.js","components/Cast.jsx","services/fetchApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListCast = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastMovie } from 'services/fetchApi';\nimport { ListCast } from './Cast.styled';\n\nfunction Cast() {\n  const [castData, setCastData] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    if (castData === null) {\n      getCastMovie(id).then(data => setCastData(data.data.cast));\n    }\n  }, [castData, id]);\n\n  return (\n    <ListCast>\n      {castData &&\n        castData.map(actor => {\n          return (\n            <li key={actor.id}>\n              <img\n                src={\n                  actor.profile_path\n                    ? `https://image.tmdb.org/t/p/original/${actor.profile_path}`\n                    : 'https://via.placeholder.com/150x226'\n                }\n                alt={actor.name}\n                width={150}\n                height={200}\n              />\n              <p>{actor.name}</p>\n            </li>\n          );\n        })}\n    </ListCast>\n  );\n}\n\nexport default Cast;\n","// Приклад API-запиту\n// https://api.themoviedb.org/3/movie/popular?api_key=cf86f342db546e57780c24367a3912bf\n//https://api.themoviedb.org/3/trending/movie/day?api_key=cf86f342db546e57780c24367a3912bf\nimport axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '?api_key=cf86f342db546e57780c24367a3912bf';\n\nexport async function fetchTrending() {\n  const trending = await axios.get(`${BASE_URL}/trending/movie/day${API_KEY}`);\n\n  if (trending.status === 200) {\n    return trending.data.results;\n  }\n}\n\n//api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n\nexport async function getMovieById(movieId) {\n  const movie = await axios.get(\n    `${BASE_URL}/movie/${movieId}${API_KEY}&language=en-US`\n  );\n  if (movie.status === 200) {\n    return movie;\n  }\n}\n\n//api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n\nexport async function getCastMovie(movieId) {\n  const cast = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits${API_KEY}&language=en-US`\n  );\n  if (cast.status === 200) {\n    return cast;\n  }\n}\n\n//https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n\nexport async function getReviewMovie(movieId) {\n  const review = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews${API_KEY}&language=en-US`\n  );\n  if (review.status === 200) {\n    return review;\n  }\n}\n\n//https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n\nexport async function getSearchMovie(query) {\n  const search = await axios.get(\n    `${BASE_URL}/search/movie${API_KEY}&query=${query}`\n  );\n  if (search.status === 200) {\n    return search;\n  }\n}\n"],"names":["ListCast","styled","useState","castData","setCastData","id","useParams","useEffect","getCastMovie","then","data","cast","map","actor","src","profile_path","alt","name","width","height","BASE_URL","API_KEY","fetchTrending","axios","trending","status","results","getMovieById","movieId","movie","getReviewMovie","review","getSearchMovie","query","search"],"sourceRoot":""}