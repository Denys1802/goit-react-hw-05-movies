{"version":3,"file":"static/js/504.135f2c2b.chunk.js","mappings":"mQAIaA,EAAYC,EAAAA,GAAAA,IAAH,iEAKTC,EAAMD,EAAAA,GAAAA,IAAH,6CAIHE,EAAYF,EAAAA,GAAAA,IAAH,yEAGlB,IAGSG,EAAUH,EAAAA,GAAAA,IAAH,8CAGPI,EAAWJ,EAAAA,GAAAA,GAAH,0CAGRK,GAAOL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,yOAWJO,EAAMP,EAAAA,GAAAA,OAAH,0P,SCyChB,MAjEA,WAAwB,IAAD,IACrB,GAAsCQ,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,iBAACL,QAAD,IAACA,GAAD,UAACA,EAAUM,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,KAC7CC,GAAOC,EAAAA,EAAAA,MAAPD,GAQR,OANAE,EAAAA,EAAAA,YAAU,WACY,OAAhBZ,IACFa,EAAAA,EAAAA,IAAaH,GAAII,MAAK,SAAAC,GAAI,OAAId,EAAec,EAAKA,KAAxB,GAE7B,GAAE,CAACf,EAAaU,KAGf,8BACGV,IACC,UAACV,EAAD,YACE,SAACQ,EAAD,CACEkB,QAAS,WACPZ,EAASE,EAAaW,QACvB,EAHH,sBAOA,UAACxB,EAAD,YACE,SAACD,EAAD,CACE0B,IAAG,8CAAyClB,EAAYmB,aACxDC,IAAK,6BACLC,MAAO,IACPC,OAAQ,OAEV,UAAC5B,EAAD,YACE,wBAAKM,EAAYuB,kBACjB,2CAEE,uBAAIvB,EAAYwB,mBAElB,uCAEE,uBAAIxB,EAAYyB,eAElB,yCAEE,uBAAIzB,EAAY0B,uBAItB,4BACE,0DACA,UAAC/B,EAAD,YACE,yBACE,SAACC,EAAD,CAAM+B,GAAG,OAAT,qBAEF,yBACE,SAAC/B,EAAD,CAAM+B,GAAG,UAAT,2BAGJ,SAAC,KAAD,WAMX,C,+LCtEKC,EAAW,+BAEXC,EAAU,4CAET,SAAeC,IAAtB,+B,aAAO,O,oBAAA,oGACkBC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,8BAA2CC,IAD7D,UAGmB,OAFlBG,EADD,QAGQC,OAHR,yCAIID,EAASjB,KAAKmB,SAJlB,kEAUA,SAAerB,EAAtB,kC,aAAO,O,oBAAA,WAA4BsB,GAA5B,uFACeJ,EAAAA,EAAAA,IAAA,UACfH,EADe,kBACGO,GADH,OACaN,EADb,oBADf,UAIgB,OAHfO,EADD,QAIKH,OAJL,yCAKIG,GALJ,kEAWA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAA4BF,GAA5B,uFACcJ,EAAAA,EAAAA,IAAA,UACdH,EADc,kBACIO,EADJ,mBACsBN,EADtB,oBADd,UAIe,OAHdS,EADD,QAIIL,OAJJ,yCAKIK,GALJ,kEAWA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAA8BJ,GAA9B,uFACgBJ,EAAAA,EAAAA,IAAA,UAChBH,EADgB,kBACEO,EADF,mBACoBN,EADpB,oBADhB,UAIiB,OAHhBW,EADD,QAIMP,OAJN,yCAKIO,GALJ,kEAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACgBX,EAAAA,EAAAA,IAAA,UAChBH,EADgB,wBACQC,EADR,kBACyBa,IAFzC,UAIiB,OAHhBC,EADD,QAIMV,OAJN,yCAKIU,GALJ,kE","sources":["pages/MovieDetail.styled.js","pages/MovieDetail.jsx","services/fetchApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nimport { Link } from 'react-router-dom';\n\nexport const WrappPage = styled.div`\n  max-width: 1280px;\n  margin: 0 auto;\n`;\n\nexport const Img = styled.img`\n  margin-top: 20px;\n`;\n\nexport const WrapMovie = styled.div`\n  display: flex;\n  alight-items: center;\n  ${'' /* justify-content: center; */}\n`;\n\nexport const Content = styled.div`\n  margin-left: 20px;\n`;\nexport const ListItem = styled.ul`\n  display: flex;\n`;\nexport const Item = styled(Link)`\n  text-decoration: none;\n  font-size: 18px;\n  margin-right: 10px;\n  font-weight: bold;\n  color: white;\n  padding: 5px 10px;\n  border-radius: 8px;\n  background-color: red;\n  text-transform: uppercase;\n`;\nexport const Btn = styled.button`\n  text-decoration: none;\n  font-size: 18px;\n  margin-right: 10px;\n  font-weight: bold;\n  color: white;\n  padding: 5px 10px;\n  border-radius: 8px;\n  background-color: red;\n  text-transform: uppercase;\n  border: none;\n`;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { getMovieById } from 'services/fetchApi';\nimport {\n  WrapMovie,\n  Content,\n  WrappPage,\n  Item,\n  ListItem,\n  Img,\n  Btn,\n} from './MovieDetail.styled';\nfunction MovieDetail() {\n  const [detailMovie, setDetailMovie] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const backLinkHref = useRef(location?.state?.from ?? '/');\n  const { id } = useParams();\n\n  useEffect(() => {\n    if (detailMovie === null) {\n      getMovieById(id).then(data => setDetailMovie(data.data));\n    }\n  }, [detailMovie, id]);\n\n  return (\n    <>\n      {detailMovie && (\n        <WrappPage>\n          <Btn\n            onClick={() => {\n              navigate(backLinkHref.current);\n            }}\n          >\n            Go Back\n          </Btn>\n          <WrapMovie>\n            <Img\n              src={`https://image.tmdb.org/t/p/original/${detailMovie.poster_path}`}\n              alt={'detailMovie.original_title'}\n              width={300}\n              height={420}\n            ></Img>\n            <Content>\n              <h2>{detailMovie.original_title}</h2>\n              <h3>\n                Release date:\n                <p>{detailMovie.release_date}</p>\n              </h3>\n              <h3>\n                Overview:\n                <p>{detailMovie.overview}</p>\n              </h3>\n              <h3>\n                Popularity:\n                <p>{detailMovie.popularity}</p>\n              </h3>\n            </Content>\n          </WrapMovie>\n          <div>\n            <h2>More information about movie</h2>\n            <ListItem>\n              <li>\n                <Item to=\"cast\">Cast</Item>\n              </li>\n              <li>\n                <Item to=\"reviews\">Reviews</Item>\n              </li>\n            </ListItem>\n            <Outlet />\n          </div>\n        </WrappPage>\n      )}\n    </>\n  );\n}\n\nexport default MovieDetail;\n","// Приклад API-запиту\n// https://api.themoviedb.org/3/movie/popular?api_key=cf86f342db546e57780c24367a3912bf\n//https://api.themoviedb.org/3/trending/movie/day?api_key=cf86f342db546e57780c24367a3912bf\nimport axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '?api_key=cf86f342db546e57780c24367a3912bf';\n\nexport async function fetchTrending() {\n  const trending = await axios.get(`${BASE_URL}/trending/movie/day${API_KEY}`);\n\n  if (trending.status === 200) {\n    return trending.data.results;\n  }\n}\n\n//api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n\nexport async function getMovieById(movieId) {\n  const movie = await axios.get(\n    `${BASE_URL}/movie/${movieId}${API_KEY}&language=en-US`\n  );\n  if (movie.status === 200) {\n    return movie;\n  }\n}\n\n//api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n\nexport async function getCastMovie(movieId) {\n  const cast = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits${API_KEY}&language=en-US`\n  );\n  if (cast.status === 200) {\n    return cast;\n  }\n}\n\n//https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n\nexport async function getReviewMovie(movieId) {\n  const review = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews${API_KEY}&language=en-US`\n  );\n  if (review.status === 200) {\n    return review;\n  }\n}\n\n//https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n\nexport async function getSearchMovie(query) {\n  const search = await axios.get(\n    `${BASE_URL}/search/movie${API_KEY}&query=${query}`\n  );\n  if (search.status === 200) {\n    return search;\n  }\n}\n"],"names":["WrappPage","styled","Img","WrapMovie","Content","ListItem","Item","Link","Btn","useState","detailMovie","setDetailMovie","location","useLocation","navigate","useNavigate","backLinkHref","useRef","state","from","id","useParams","useEffect","getMovieById","then","data","onClick","current","src","poster_path","alt","width","height","original_title","release_date","overview","popularity","to","BASE_URL","API_KEY","fetchTrending","axios","trending","status","results","movieId","movie","getCastMovie","cast","getReviewMovie","review","getSearchMovie","query","search"],"sourceRoot":""}