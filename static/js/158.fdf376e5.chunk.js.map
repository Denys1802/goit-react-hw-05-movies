{"version":3,"file":"static/js/158.fdf376e5.chunk.js","mappings":"2PAEaA,EAAQC,EAAAA,GAAAA,IAAH,iEAKLC,EAAYD,EAAAA,GAAAA,GAAH,4EAMTE,EAAQF,EAAAA,GAAAA,EAAH,0G,SCsDlB,EA7De,WAAO,IAAD,EACnB,GAA0BG,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,GAAa,UAACF,EAAaG,IAAI,gBAAlB,QAA8B,IAAIC,OAE/CC,GAAWC,EAAAA,EAAAA,MAiBjB,OAfAC,EAAAA,EAAAA,YAAU,WACRX,EAASM,GACU,KAAfA,IACJM,EAAAA,EAAAA,IAAeN,GAAYO,MAAK,SAAAC,GAAI,OAAIZ,EAAUY,EAAKA,KAAKC,QAAxB,GACrC,GAAE,CAACT,EAAYF,KAYd,UAACV,EAAD,YACE,kBAAMsB,SAXV,SAAsBC,GACpBA,EAAEC,iBACmB,KAAjBnB,EAAMS,QACRH,EAAgB,CAAEc,MAAOpB,EAAMS,SAGjCS,EAAEG,OAAOC,OACV,EAIG,WACE,kBACEC,KAAK,OACLC,MAAOxB,EACPyB,SAAU,SAAAP,GAAC,OAAIjB,EAASiB,EAAEG,OAAOG,MAAtB,KAEb,mBAAQD,KAAK,SAAb,uBAGDrB,EAAOwB,OAAS,IACf,UAAC7B,EAAD,WACGK,EAAOyB,KAAI,SAAAC,GAAK,OACf,2BACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMtB,GAAhD,UACE,gBACEuB,IACEL,EAAMM,YAAN,yCACsCN,EAAMM,aACxC,sCAENC,IAAKP,EAAMQ,MACXC,OAAQ,SAGZ,SAACvC,EAAD,UAAQ8B,EAAMQ,UAZPR,EAAME,GADA,IADnB,SAsBP,C,+LC5DKQ,EAAW,+BAEXC,EAAU,4CAET,SAAeC,IAAtB,+B,aAAO,O,oBAAA,oGACkBC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,8BAA2CC,IAD7D,UAGmB,OAFlBG,EADD,QAGQC,OAHR,yCAIID,EAAS3B,KAAKC,SAJlB,kEAUA,SAAe4B,EAAtB,kC,aAAO,O,oBAAA,WAA4BC,GAA5B,uFACeJ,EAAAA,EAAAA,IAAA,UACfH,EADe,kBACGO,GADH,OACaN,EADb,oBADf,UAIgB,OAHfX,EADD,QAIKe,OAJL,yCAKIf,GALJ,kEAWA,SAAekB,EAAtB,kC,aAAO,O,oBAAA,WAA4BD,GAA5B,uFACcJ,EAAAA,EAAAA,IAAA,UACdH,EADc,kBACIO,EADJ,mBACsBN,EADtB,oBADd,UAIe,OAHdQ,EADD,QAIIJ,OAJJ,yCAKII,GALJ,kEAWA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAA8BH,GAA9B,uFACgBJ,EAAAA,EAAAA,IAAA,UAChBH,EADgB,kBACEO,EADF,mBACoBN,EADpB,oBADhB,UAIiB,OAHhBU,EADD,QAIMN,OAJN,yCAKIM,GALJ,kEAWA,SAAepC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BO,GAA9B,uFACgBqB,EAAAA,EAAAA,IAAA,UAChBH,EADgB,wBACQC,EADR,kBACyBnB,IAFzC,UAIiB,OAHhB8B,EADD,QAIMP,OAJN,yCAKIO,GALJ,kE","sources":["pages/Movies.styled.js","pages/Movies.jsx","services/fetchApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapp = styled.div`\n  max-width: 1280px;\n  margin: 0 auto;\n`;\n\nexport const ListMovie = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n`;\n\nexport const Title = styled.p`\n  font-size: 16px;\n  font-weight: bold;\n  max-width: 300px;\n  padding: 0 5px;\n`;\n","//import SearchList from 'components/SearchList';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { getSearchMovie } from 'services/fetchApi';\nimport { Wrapp, ListMovie, Title } from './Movies.styled';\n\nconst Movies = () => {\n  const [input, setInput] = useState('');\n  const [movies, setMovies] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const movieTitle = (searchParams.get('query') ?? '').trim();\n\n  const location = useLocation();\n\n  useEffect(() => {\n    setInput(movieTitle);\n    if (movieTitle === '') return;\n    getSearchMovie(movieTitle).then(data => setMovies(data.data.results));\n  }, [movieTitle, searchParams]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (input.trim() !== '') {\n      setSearchParams({ query: input.trim() });\n    }\n\n    e.target.reset();\n  }\n\n  return (\n    <Wrapp>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={input}\n          onChange={e => setInput(e.target.value)}\n        />\n        <button type=\"submit\">search</button>\n      </form>\n\n      {movies.length > 0 && (\n        <ListMovie>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                <img\n                  src={\n                    movie.poster_path\n                      ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n                      : 'https://via.placeholder.com/300x450'\n                  }\n                  alt={movie.title}\n                  height={400}\n                />\n              </Link>\n              <Title>{movie.title}</Title>\n            </li>\n          ))}\n          ;\n        </ListMovie>\n      )}\n    </Wrapp>\n  );\n};\n\nexport default Movies;\n","// Приклад API-запиту\n// https://api.themoviedb.org/3/movie/popular?api_key=cf86f342db546e57780c24367a3912bf\n//https://api.themoviedb.org/3/trending/movie/day?api_key=cf86f342db546e57780c24367a3912bf\nimport axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '?api_key=cf86f342db546e57780c24367a3912bf';\n\nexport async function fetchTrending() {\n  const trending = await axios.get(`${BASE_URL}/trending/movie/day${API_KEY}`);\n\n  if (trending.status === 200) {\n    return trending.data.results;\n  }\n}\n\n//api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n\nexport async function getMovieById(movieId) {\n  const movie = await axios.get(\n    `${BASE_URL}/movie/${movieId}${API_KEY}&language=en-US`\n  );\n  if (movie.status === 200) {\n    return movie;\n  }\n}\n\n//api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n\nexport async function getCastMovie(movieId) {\n  const cast = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits${API_KEY}&language=en-US`\n  );\n  if (cast.status === 200) {\n    return cast;\n  }\n}\n\n//https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n\nexport async function getReviewMovie(movieId) {\n  const review = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews${API_KEY}&language=en-US`\n  );\n  if (review.status === 200) {\n    return review;\n  }\n}\n\n//https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n\nexport async function getSearchMovie(query) {\n  const search = await axios.get(\n    `${BASE_URL}/search/movie${API_KEY}&query=${query}`\n  );\n  if (search.status === 200) {\n    return search;\n  }\n}\n"],"names":["Wrapp","styled","ListMovie","Title","useState","input","setInput","movies","setMovies","useSearchParams","searchParams","setSearchParams","movieTitle","get","trim","location","useLocation","useEffect","getSearchMovie","then","data","results","onSubmit","e","preventDefault","query","target","reset","type","value","onChange","length","map","movie","to","id","state","from","src","poster_path","alt","title","height","BASE_URL","API_KEY","fetchTrending","axios","trending","status","getMovieById","movieId","getCastMovie","cast","getReviewMovie","review","search"],"sourceRoot":""}